<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>4</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>768</x>
      <y>292</y>
      <w>116</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>_cs2800::Stack_
bg=pink
This class represents a 
Stack of Entry values
--
*Attributes*
-size: integer
-entries: List&lt;Entry&gt;
--
*Responsibilities*
&lt;&lt;constructor&gt;&gt; +Stack()
+push(i: Entry)
/    Adds a new Entry to the Stack/
+pop(): Entry {exception=EmptyStack}
/    Returns (and removes) newest Entry/
+top(): Entry {exception=EmptyStack}
/    Return (but keeps) newset Entry/
+size():integer
/    How many Entry's in the Stack/

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>756</x>
      <y>208</y>
      <w>140</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt; 
bg=yellow
_cs2800::Calculator_
Allows calculation of 
String Expressions
--
*Responsibilities*
+evaluate(String: expression): float
    {exception=InvalidExpression,
     				 EmptyStack,
     				 BadType}
/    Get the evaluation of an arithmetic expression string./</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>908</x>
      <y>484</y>
      <w>92</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt; 
bg=orange
_cs2800::Type_
A list of the types of 
value an Entry can represent
--
_NUMBER_
_SYMBOL_
_STRING_
_INVALID_
--
*Responsibilities*
&lt;&lt;constructor&gt;&gt; +Type(String: string)
+toString(): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>768</x>
      <y>424</y>
      <w>116</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>_cs2800::Entry_
bg=orange
Values stored in a Stack
--
*Attributes*
-number: float
-other: Symbol
-str: String
-type: Type
--
*Responsibilities*
&lt;&lt;constructor&gt;&gt; +Entry(float: value)
&lt;&lt;constructor&gt;&gt; +Entry(Symbol: value)
+getType(): Type
+getString(): String 
              {Exception=BadType}
+setString(String: newString)   
+getSymbol(): Symbol 
              {exception=BadType}
+setSymbol(Symbol: newSymbol)
+getNumber(): float
              {exception=BadType}
+setNumber(float: newNumber)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>624</x>
      <y>464</y>
      <w>120</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt; 
bg=orange
_cs2800::Symbol_
A list of the non-number tokens 
possible in an expression
--
_LEFT BRACKET_
_RIGHT BRACKET_
_TIMES_
_DIVIDE_
_PLUS_
_MINUS_
_INVALID_
--
&lt;&lt;constructor&gt;&gt; +Symbol(Symbol: string)
+toString(): String
&lt;&lt;static&gt;&gt; +toSymbol(String: strSymbol): Symbol
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>772</x>
      <y>8</y>
      <w>128</w>
      <h>92</h>
    </coordinates>
    <panel_attributes>&lt;&lt;state model&gt;&gt;
bg=red
_cs2800: CalcModel_
Also shows the values of each of
the Calculator's memories.
--
*Attributes*
-currentCalc: Calculator
-revPolishCalc: RevPolishCalc
-standardCalc: StandarCalc
--
*Responsibilities*
+setType(boolean: isInfix)
/    Set the type of the calculator./
+evaluate(String: expression): float
/    Get the result of the arithmetic string./
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>632</x>
      <y>224</y>
      <w>108</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>bg=pink
_cs2800::NumStack_
Since reverse Polish evaluation
only uses a Stack of numeric values
we provide a facade to hide details
--
*Attributes*
-stack: Stack
--
*Responsibilities*
+push(i: float)
+pop(): float 
               {exception=EmptyStack}
+isEmpty():boolean
+size(): integer
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>912</x>
      <y>220</y>
      <w>116</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>bg=pink
_cs2800::OpStack_
Since the Shunting algorithm
only uses a Stack of symbols 
we provide a facade to hide details
--
*Attributes*
-stack: Stack
--
*Responsibilities*
+push(i: Symbol)
+pop(): Symbol 
                    {exception=EmptyStack}
+isEmpty():boolean
+size(): integer
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>848</x>
      <y>108</y>
      <w>148</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>bg=yellow
_cs2800::StandardCalc_
Evaluates infix String Expressions
--
*Attributes*
-opStack: OpStack
-revPolishCalc: RevPolishCalc
--
*Responsibilities*
&lt;&lt;constructor&gt;&gt; +StandardCalc()
+evaluate(String: expression): float
     {exception=InvalidExpression, BadType, EmptyStack}
+convert(String: infixString): String
	     {exception=InvalidExpression, BadType, EmptyStack}
/    Converts an infix expression to a postfix expression./</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>676</x>
      <y>120</y>
      <w>148</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>bg=yellow
_cs2800::RevPolishCalc_
Evaluates Reverse Polish
String Expressions
--
*Attributes*
-values: NumStack
--
*Responsibilities*
&lt;&lt;constructor&gt;&gt; +RevPolishCalc()
+evaluate(String: expression): float
     {exception=InvalidExpression, BadType, EmptyStack}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>760</x>
      <y>96</y>
      <w>68</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>150.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>836</x>
      <y>96</y>
      <w>56</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>892</x>
      <y>188</y>
      <w>80</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>880</x>
      <y>300</y>
      <w>92</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
&lt;&lt;facade&gt;&gt;</panel_attributes>
    <additional_attributes>210.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>700</x>
      <y>304</y>
      <w>76</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1pos=-50,20
m1=&lt;&lt;facade&gt;&gt;</panel_attributes>
    <additional_attributes>40.0;10.0;170.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>836</x>
      <y>188</y>
      <w>40</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;50.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>792</x>
      <y>184</y>
      <w>24</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>40.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>824</x>
      <y>400</y>
      <w>20</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=0..*</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>880</x>
      <y>452</y>
      <w>68</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>740</x>
      <y>472</y>
      <w>36</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>308</x>
      <y>320</y>
      <w>128</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>&lt;&lt;view&gt;&gt;
cs2800::GuiViewController
A class controlling the GUI view of the 
application.
--
*Attributes*
-expression: String
-answer: String
--
*Responsibilities*
+initialize()
/    Sets the state of the radio buttons./
+getExpression(): String
/    Returns the expression input into the text field./
+addCalcObserver(CalcController: observer)
/    Assign a CalcController observer./
+submitExpression(ActionEvent: event)
/    Notifies the observer when we need to calculate/
+setToInfix(ActionEventL event)
/    Sets the calculator mode to infix./
+setToPostfix(ActionEvent: event)
/    Sets the calculator mode to postfix./
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>580</x>
      <y>60</y>
      <w>200</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>480.0;10.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>420</x>
      <y>156</y>
      <w>132</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;240.0;310.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>156</x>
      <y>156</y>
      <w>312</w>
      <h>172</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
m2=&lt;&lt;Observer&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;410.0;760.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>672</x>
      <y>184</y>
      <w>88</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>200.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>140</x>
      <y>240</y>
      <w>452</w>
      <h>256</h>
    </coordinates>
    <panel_attributes>valign=bottom
View Assembly
fontsize=28
fg=magenta
bg=light_gray
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>308</x>
      <y>252</y>
      <w>132</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
cs2800::CalcView
--
*Responsibilities*
+getExpression(): String
+setAnswer(String: str): void
+addCalcObserver(CalcController: observer): void
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>156</x>
      <y>320</y>
      <w>136</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>&lt;&lt;view&gt;&gt;
cs2800::AsciiView
A menu based View
--
*Attributes*
-scanner: Scanner
-observer: CalcController
-currentExpression: String
--
*Responsibilities*
&lt;&lt;controller&gt;&gt; A+sciiViewController()
+mainMenu()
/    The main menu for the ASCII interface./
+showOptions()
/    Prints out the calculator options to the user./
+performCalculation()
/    Gets an expression from the user and calculates it./
+getExpression(): String
/    Gets from input the user expression./
+setAnswer()
/    Outputs the value of evaluated expression./
+addCalcObserver(CalcController: observer)
/    Add a CalcController observer./
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>396</x>
      <y>156</y>
      <w>188</w>
      <h>172</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
m2=&lt;&lt;Observer&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;410.0;390.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>192</x>
      <y>296</y>
      <w>164</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>390.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>368</x>
      <y>296</y>
      <w>12</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>608</x>
      <y>0</y>
      <w>432</w>
      <h>568</h>
    </coordinates>
    <panel_attributes>                                                              
                                                              
                                                              
                                                                                              Model Assembly
layer=0
fontsize=28
fg=magenta
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>460</x>
      <y>48</y>
      <w>124</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>&lt;&lt;controller&gt;&gt;
bg=blue
_cs2800:CalcController_
Create view and model.
Adds itself as an observer to the view
so that (asynchronous) changes
can be observed. 
--
*Attributes*
-model: CalcModel
-view: CalcView
--
*Responsibilities*
+calculate(String: expression)
/   Is notified when a calculation is required/
+expressionType(boolean: infix)
    Is notified when a change of 
    expression type is indicated
group=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>452</x>
      <y>40</y>
      <w>140</w>
      <h>148</h>
    </coordinates>
    <panel_attributes>valign=bottom
Controller
layer=0
fontsize=28
fg=magenta
bg=light_gray
group=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>452</x>
      <y>320</y>
      <w>128</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>&lt;&lt;application&gt;&gt;
cs2800::GuiView
A graphical window with 
1. a text field for an expression
2. a "calculate" button
3. a radio button: 
   "Reverse Polish/Infix"
--
*Attributes*
&lt;&lt;static&gt;&gt; -loader: FXMLLoader
--
*Responsibilities*
+start(State: primaryStage)
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>432</x>
      <y>356</y>
      <w>28</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
